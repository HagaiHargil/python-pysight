INFO :: read_lst.py :: 2019-01-21 22:55:48,035 :: Reading file "/data/Hagai/super_resolution/19-1-21/double_ja_flag_two_beams_start_pmt_stop2_lines_030.lst"...
INFO :: read_lst.py :: 2019-01-21 22:55:48,058 :: File read. Sorting the file according to timepatch...
INFO :: binary_parser.py :: 2019-01-21 22:55:50,013 :: Sorted dataframe created. Starting to set the proper data channel distribution...
INFO :: allocation.py :: 2019-01-21 22:55:50,458 :: Channels of events found. Allocating photons to their frames and lines...
INFO :: allocation.py :: 2019-01-21 22:55:57,464 :: Relative times calculated. Creating Movie object...
WARNING :: main.py :: 2019-01-21 22:55:57,464 :: Deinterleaving a data channel is currently highly experimental and
            is supported only on data in the PMT1 channel. Inexperienced users
            are highly advised not to use it.
INFO :: movie.py :: 2019-01-21 22:56:40,164 :: Saving full stack to disk...
INFO :: movie.py :: 2019-01-21 22:57:10,469 :: =======================================================
Outputs:
--------
INFO :: movie.py :: 2019-01-21 22:57:10,470 :: Stack file created with name "/data/Hagai/super_resolution/19-1-21/double_ja_flag_two_beams_start_pmt_stop2_lines_030.hdf5",
containing a data group named "Full Stack", with one dataset per channel.
INFO :: movie.py :: 2019-01-21 22:57:10,470 :: The full data is present in dictionary form (key per channel) under `movie.stack`, and in stacked form under `movie.summed_mem`.
INFO :: movie.py :: 2019-01-21 22:57:10,470 :: Summed stack file created with name "/data/Hagai/super_resolution/19-1-21/double_ja_flag_two_beams_start_pmt_stop2_lines_030.hdf5",
containing a data group named "Summed Stack", with one dataset per channel.
INFO :: movie.py :: 2019-01-21 22:57:10,470 :: Movie object created, analysis done.
